version: "3.9"

services:
  mongo: 
    container_name: mongo_db
    image: mongo:latest
    ports:
      - "2717:27017"
    volumes: 
      - ./data://data/db
      - ./mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.sh:ro
    networks: 
      - vgnetwork
  api: 
    restart: always
    build: .
    links: 
      - mongo
    volumes:
      - ./://usr/src/app:ro
      - /usr/src/app/node_modules/
    depends_on: 
      - mongo
    environment: 
      PORT: ${PORT}
      MONGO_URL: ${MONGO_URL}
    networks:
      - vgnetwork
    deploy:
      mode: replicated
      replicas: 2
  nginx:
    image: nginx:latest
    volumes: 
      - ./nginx:/etc/nginx/conf.d
    networks:
      - vgnetwork
    ports: 
      - "7272:80"
    depends_on:
      - api
  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    container_name: zookeeper
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
  broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: broker
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"

networks:
  vgnetwork: 
    name: vgnetwork
    external: false
